config {
  type: "table",
  dependencies: [
    "transactions_raw",
    "users_raw",
    "merchants_raw",
    "fraud_flags_raw"
  ],
  description: "A unified view of transactions, users, merchants, and fraud flags. It combines raw data and applies initial cleaning.",
  columns: {
    transaction_id: "The unique identifier for each transaction.",
    user_id: "The unique identifier for the user who made the transaction.",
    amount: "The raw transaction amount.",
    transaction_timestamp: "The exact timestamp of the transaction.",
    currency: "The currency of the transaction (e.g., 'USD').",
    user_country: "The country where the user is located, derived from the users_raw table.",
    registration_date: "The date the user registered.",
    merchant_category: "The category of the merchant, derived from the merchants_raw table.",
    is_flagged_for_fraud: "A flag indicating if the user is in the known fraud list.",
    cleaned_amount: "The transaction amount, with all invalid values (zero or negative) removed."
  }
}

SELECT
  t.transaction_id,
  t.user_id,
  t.amount,
  t.transaction_timestamp,
  t.currency,
  u.user_country,
  u.registration_date,
  m.merchant_category,
  CASE
    WHEN f.user_id IS NOT NULL THEN TRUE
    ELSE FALSE
  END AS is_flagged_for_fraud,
  CASE
    WHEN t.amount <= 0 THEN NULL
    ELSE t.amount
  END AS cleaned_amount
FROM
  `virtual-ego-471706-k3.finance_analytics.transactions_raw` AS t
LEFT JOIN
  `virtual-ego-471706-k3.finance_analytics.users_raw` AS u
  ON t.user_id = u.user_id
LEFT JOIN
  `virtual-ego-471706-k3.finance_analytics.merchants_raw` AS m
  ON t.merchant_id = m.merchant_id
LEFT JOIN
  `virtual-ego-471706-k3.finance_analytics.fraud_flags_raw` AS f
  ON t.user_id = f.user_id
WHERE
  t.currency = 'USD'